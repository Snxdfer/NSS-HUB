--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v97=0;local v98;while true do if (v97==1) then return v98;end if (v97==0) then v98=v5(v81,v19);v19=nil;v97=1;end end else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(511 + 57) -(367 + 201) ;local v83;while true do if (v82==(0 -0)) then v83=(v31/((929 -(214 + 713))^(v32-1)))%(((1 -0) + 1)^(((v33-(1 + 0)) -(v32-((1943 -(68 + 997)) -(282 + 595)))) + (2 -1))) ;return v83-(v83%(1 -0)) ;end end else local v84=(4 -2)^(v32-(620 -(555 + 64))) ;return (((v31%(v84 + v84))>=v84) and (1271 -(226 + 1044))) or ((4053 -3122) -(857 + 74)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 + 0 ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (351 -(87 + 263)) + 2 );v18=v18 + (961 -((1072 -(67 + 113)) + 65)) ;return (v40 * (40022563 -23245347)) + (v39 * (121138 -55602)) + (v38 * (469 -213)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 + 0 ;local v44=(v20(v42,2 -1 ,43 -23 ) * (2^(24 + 8))) + v41 ;local v45=v20(v42,83 -62 ,6 + 25 );local v46=((v20(v42,32)==(1 -0)) and  -((2439 -(998 + 488)) -(802 + 150))) or (792 -(368 + 423)) ;if (v45==(0 -0)) then if (v44==((6 + 12) -(10 + 8))) then return v46 * ((0 + 0) -0) ;else local v88=0 -0 ;while true do if (v88==(0 + 0)) then v45=3 -2 ;v43=997 -(915 + 82) ;break;end end end elseif (v45==(5796 -3749)) then return ((v44==(0 + 0)) and (v46 * (1/(0 -0)))) or (v46 * NaN) ;end return v8(v46,v45-(2210 -(1069 + 118)) ) * (v43 + (v44/((440 -(145 + (1065 -(201 + 571))))^(482 -((1182 -(116 + 1022)) + 386))))) ;end local function v25(v47) local v48;if  not v47 then local v85=(0 -0) -0 ;while true do if (v85==(0 + 0 + 0)) then v47=v23();if (v47==(0 -0)) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;local v49={};for v63=860 -(814 + 45) , #v48 do v49[v63]=v2(v1(v3(v48,v63,v63)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=0 + 0 ;local v51;local v52;local v53;local v54;local v55;local v56;while true do local v65=698 -(208 + 490) ;while true do if (v65==(1 + 0)) then if (v50==(0 + 0)) then local v95=836 -(660 + 176) ;while true do if (v95==2) then v50=1;break;end if (v95~=1) then else v53={};v54={v51,v52,nil,v53};v95=2;end if (v95~=(675 -(534 + 141))) then else v51={};v52={};v95=573 -(426 + 146) ;end end end break;end if (v65==(0 + 0)) then if ((1457 -(282 + 1174))==v50) then v55=v23();v56={};for v99=1 + 0 ,v55 do local v100=0 + 0 ;local v101;local v102;local v103;while true do if (v100==0) then local v110=0 + 0 ;while true do if (v110~=(0 -0)) then else v101=0 -0 ;v102=nil;v110=2 -1 ;end if (v110==1) then v100=1252 -(721 + 530) ;break;end end end if (v100~=(1 + 0)) then else v103=nil;while true do if (v101~=(1 + 0)) then else if (v102==1) then v103=v21()~=(396 -(115 + 281)) ;elseif (v102==(2 + 0)) then v103=v24();elseif (v102==(6 -3)) then v103=v25();end v56[v99]=v103;break;end if (v101==0) then local v114=0 + 0 ;local v115;while true do if (v114==(0 + 0)) then v115=0 -0 ;while true do if (v115~=0) then else v102=v21();v103=nil;v115=3 -2 ;end if (v115==1) then v101=868 -(550 + 317) ;break;end end break;end end end end break;end end end v54[1291 -(993 + 295) ]=v21();v50=1 + 1 ;end if (v50==(1173 -(418 + 753))) then for v104=1,v23() do local v105=0 + 0 ;local v106;local v107;while true do if (v105~=(1 + 0)) then else while true do if (v106==(0 -0)) then v107=v21();if (v20(v107,1 -0 ,530 -(406 + 123) )~=(0 -0)) then else local v116=285 -(134 + 151) ;local v117;local v118;local v119;while true do if (v116==(1666 -(970 + 695))) then local v193=0 -0 ;while true do if (0==v193) then v119={v22(),v22(),nil,nil};if (v117==(0 -0)) then local v211=0 -0 ;while true do if (v211==(1900 -(106 + 1794))) then v119[1 + 2 ]=v22();v119[1828 -(1195 + 629) ]=v22();break;end end elseif (v117==1) then v119[3 -0 ]=v23();elseif (v117==(5 -3)) then v119[7 -4 ]=v23() -((243 -(187 + 54))^(796 -(162 + 618))) ;elseif (v117==(3 + 0)) then local v216=0;local v217;while true do if ((0 + 0)~=v216) then else v217=0;while true do if (v217==0) then v119[6 -3 ]=v23() -((2 + 0)^16) ;v119[4]=v22();break;end end break;end end end v193=1 -0 ;end if ((2 -1)~=v193) then else v116=1 + 1 ;break;end end end if (v116==0) then local v194=1636 -(1373 + 263) ;while true do if (v194~=(1001 -(451 + 549))) then else v116=1 -0 ;break;end if (v194~=(0 -0)) then else v117=v20(v107,2 + 0 ,1 + 2 );v118=v20(v107,7 -3 ,6);v194=1 + 0 ;end end end if (v116~=(4 -1)) then else if (v20(v118,4 -1 ,3 + 0 )==(1385 -(746 + 638))) then v119[4]=v56[v119[2 + 2 ]];end v51[v104]=v119;break;end if (v116==(7 -5)) then if (v20(v118,1213 -(323 + 889) ,1)~=1) then else v119[5 -3 ]=v56[v119[2]];end if (v20(v118,2,2 -0 )~=(321 -(53 + 267))) then else v119[1 + 2 ]=v56[v119[344 -(218 + 123) ]];end v116=1584 -(1535 + 46) ;end end end break;end end break;end if ((413 -(15 + 398))~=v105) then else local v111=0;local v112;while true do if (v111==(982 -(18 + 964))) then v112=0;while true do if (v112==(0 + 0)) then v106=0 + 0 ;v107=nil;v112=3 -2 ;end if (v112==(1 + 0)) then v105=561 -(306 + 254) ;break;end end break;end end end end end for v108=851 -(20 + 830) ,v23() do v52[v108-1 ]=v28();end return v54;end v65=1 + 0 ;end end end end local function v29(v57,v58,v59) local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...) local v66=v60;local v67=v61;local v68=v62;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v87=0;while true do if (v87==1) then if (v79<=19) then if (v79<=9) then if (v79<=4) then if (v79<=1) then if (v79>0) then v76[v78[2]]=v78[3]~=0 ;elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=2) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==3) then v76[v78[2]][v78[3]]=v76[v78[4]];else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=6) then if (v79==5) then local v121=v78[2];v76[v121]=v76[v121](v13(v76,v121 + 1 ,v78[3]));else local v123=v78[2];local v124,v125=v69(v76[v123](v13(v76,v123 + 1 ,v78[3])));v71=(v125 + v123) -1 ;local v126=0;for v155=v123,v71 do v126=v126 + 1 ;v76[v155]=v124[v126];end end elseif (v79<=7) then local v127=v78[2];local v128,v129=v69(v76[v127](v13(v76,v127 + 1 ,v78[3])));v71=(v129 + v127) -1 ;local v130=0;for v158=v127,v71 do v130=v130 + 1 ;v76[v158]=v128[v130];end elseif (v79==8) then local v169=0;local v170;while true do if (v169==0) then v170=v78[2];v76[v170]=v76[v170](v13(v76,v170 + 1 ,v71));break;end end else v76[v78[2]]=v76[v78[3]];end elseif (v79<=14) then if (v79<=11) then if (v79==10) then do return;end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=12) then local v131=0;local v132;while true do if (v131==0) then v132=v78[2];v76[v132]=v76[v132](v76[v132 + 1 ]);break;end end elseif (v79==13) then v76[v78[2]][v78[3]]=v76[v78[4]];else local v176=v78[2];local v177=v76[v78[3]];v76[v176 + 1 ]=v177;v76[v176]=v177[v78[4]];end elseif (v79<=16) then if (v79>15) then local v133=0;local v134;while true do if (0==v133) then v134=v78[2];v76[v134]=v76[v134]();break;end end else v76[v78[2]]=v76[v78[3]];end elseif (v79<=17) then v76[v78[2]]=v59[v78[3]];elseif (v79==18) then v76[v78[2]]();else v70=v78[3];end elseif (v79<=29) then if (v79<=24) then if (v79<=21) then if (v79>20) then v76[v78[2]]=v78[3]~=0 ;else v76[v78[2]]=v78[3];end elseif (v79<=22) then local v142=v78[2];v76[v142]=v76[v142]();elseif (v79>23) then local v182=v78[2];local v183=v76[v78[3]];v76[v182 + 1 ]=v183;v76[v182]=v183[v78[4]];else v70=v78[3];end elseif (v79<=26) then if (v79==25) then local v144=v78[2];v76[v144]=v76[v144](v76[v144 + 1 ]);else v76[v78[2]]=v29(v67[v78[3]],nil,v59);end elseif (v79<=27) then v76[v78[2]]=v78[3];elseif (v79>28) then for v200=v78[2],v78[3] do v76[v200]=nil;end else v76[v78[2]]=v29(v67[v78[3]],nil,v59);end elseif (v79<=34) then if (v79<=31) then if (v79==30) then local v149=v78[2];v76[v149](v13(v76,v149 + 1 ,v78[3]));else do return;end end elseif (v79<=32) then v76[v78[2]]=v59[v78[3]];elseif (v79>33) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v191=v78[2];v76[v191]=v76[v191](v13(v76,v191 + 1 ,v71));end elseif (v79<=36) then if (v79==35) then local v152=v78[2];v76[v152]=v76[v152](v13(v76,v152 + 1 ,v78[3]));else local v154=v78[2];v76[v154](v13(v76,v154 + 1 ,v78[3]));end elseif (v79<=37) then for v161=v78[2],v78[3] do v76[v161]=nil;end elseif (v79>38) then v76[v78[2]]();elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end v70=v70 + 1 ;break;end if (v87==0) then v78=v66[v70];v79=v78[1];v87=1;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!2E3O00028O00026O00084003093O004E657742752O746F6E03053O006368616D7303243O00686967686C696768747320612O6C20706C6179657273207468726F7567682077612O6C7303063O004E657754616203083O004D6F76656D656E74030A3O004E657753656374696F6E026O001040027O00402O033O00455350026O00F03F030C3O00736B656C65746F6E20657370026O00144003043O004D69736303073O006C6F772067667803243O006C6F7765727320677261706869637320746F20622O6F737420706572666F726D616E6365026O001840030E3O00496E66696E697465205969656C6403113O0046452041646D696E20436F2O6D616E647303083O004E65774C6162656C03203O006D61646520627920656C72616E646F6D206F6E20646973636F726420F09F94A5030E3O006D6F62696C6520666C792067756903093O004E6577536C6964657203093O0057616C6B73702O656403073O0053502O45442O21025O00407F40026O00304003093O004A756D2O706F776572030B3O004A554D5020484947482O21025O00E07540026O00494003043O004D61696E030F3O00486974626F7820457870616E64657203273O004D616B6573206576657279206F7468657220706C617965727320686974626F782062692O67657203133O00466F76204368616E676572202862752O67792903103O006368616E67657320796F757220666B76025O00806640025O00805140030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F762O66316251394603093O004372656174654C696203073O004E2O532048756203053O004F6365616E009C3O0012143O00014O00250001000A3O00264O0012000100020004133O0012000100200E000B00060003001214000D00043O001214000E00053O00021C000F6O0024000B000F000100200E000B00020006001214000D00074O0023000B000D00022O000F0007000B3O00200E000B00070008001214000D00074O0023000B000D00022O000F0008000B3O0012143O00093O00264O002A0001000A0004133O002A0001001214000B00013O00262O000B0020000100010004133O0020000100200E000C00020006001214000E000B4O0023000C000E00022O000F0005000C3O00200E000C00050008001214000E000B4O0023000C000E00022O000F0006000C3O001214000B000C3O00262O000B00150001000C0004133O0015000100200E000C00060003001214000E000D3O001214000F00053O00021C001000014O0024000C001000010012143O00023O0004133O002A00010004133O0015000100264O00420001000E0004133O00420001001214000B00013O000E02000100380001000B0004133O0038000100200E000C00020006001214000E000F4O0023000C000E00022O000F0009000C3O00200E000C00090008001214000E000F4O0023000C000E00022O000F000A000C3O001214000B000C3O00262O000B002D0001000C0004133O002D000100200E000C000A0003001214000E00103O001214000F00113O00021C001000024O0024000C001000010012143O00123O0004133O004200010004133O002D000100264O004D000100120004133O004D000100200E000B000A0003001214000D00133O001214000E00143O00021C000F00034O0024000B000F000100200E000B000A0015001214000D00164O0024000B000D00010004133O009B000100264O006B000100090004133O006B0001001214000B00013O00262O000B00590001000C0004133O0059000100200E000C00080003001214000E00173O001214000F00173O00021C001000044O0024000C001000010012143O000E3O0004133O006B0001000E02000100500001000B0004133O0050000100200E000C00080018001214000E00193O001214000F001A3O0012140010001B3O0012140011001C3O00021C001200054O0024000C0012000100200E000C00080018001214000E001D3O001214000F001E3O0012140010001F3O001214001100203O00021C001200064O0024000C00120001001214000B000C3O0004133O0050000100264O007E0001000C0004133O007E000100200E000B00030008001214000D00214O0023000B000D00022O000F0004000B3O00200E000B00040003001214000D00223O001214000E00233O00021C000F00074O0024000B000F000100200E000B00040018001214000D00243O001214000E00253O001214000F00263O001214001000273O00021C001100084O0024000B001100010012143O000A3O00264O0002000100010004133O00020001001214000B00013O00262O000B0091000100010004133O00910001001211000C00283O001211000D00293O00200E000D000D002A001214000F002B4O0007000D000F4O0021000C3O00022O0010000C000100022O000F0001000C3O002022000C0001002C001214000D002D3O001214000E002E4O0023000C000E00022O000F0002000C3O001214000B000C3O00262O000B00810001000C0004133O0081000100200E000C00020006001214000E00214O0023000C000E00022O000F0003000C3O0012143O000C3O0004133O000200010004133O008100010004133O000200012O000A3O00013O00093O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403403O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4C7563617366696E3O302F53706163654875622F6D61696E2F5545535000083O0012113O00013O001211000100023O00200E000100010003001214000300044O0007000100034O00215O00022O00123O000100012O000A3O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F343146793654335900093O0012113O00013O001211000100023O00200E000100010003001214000300044O0001000400014O0007000100044O00215O00022O00123O000100012O000A3O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F694733595448335300093O0012113O00013O001211000100023O00200E000100010003001214000300044O0001000400014O0007000100044O00215O00022O00123O000100012O000A3O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403443O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4564676549592F696E66696E6974657969656C642F6D61737465722F736F7572636500083O0012113O00013O001211000100023O00200E000100010003001214000300044O0007000100034O00215O00022O00123O000100012O000A3O00017O00023O00030A3O006C6F6164737472696E6703CB3O006C6F6164737472696E672867616D653A482O74704765742O2827682O7470733A2O2F676973742E67697468756275736572636F6E74656E742E636F6D2F6D656F7A6F6E6559542F6266303337642O6639663061372O3031373330343O643637666463643337302F7261772F6531346537346634323562303630646635322O3334336366333062373837303734656233633564322F6172636575732532353230782532353230666C7925323532303225323532306F62666C756361746F7227292C747275652O2928292O0A00053O0012113O00013O001214000100024O000C3O000200022O00123O000100012O000A3O00017O00063O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O0057616C6B53702O656401073O001211000100013O002022000100010002002022000100010003002022000100010004002022000100010005001003000100064O000A3O00017O00063O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403093O004A756D70506F77657201073O001211000100013O002022000100010002002022000100010003002022000100010004002022000100010005001003000100064O000A3O00017O00043O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F447768356856303600083O0012113O00013O001211000100023O00200E000100010003001214000300044O0007000100034O00215O00022O00123O000100012O000A3O00017O00033O0003093O00776F726B7370616365030D3O0043752O72656E7443616D657261030B3O004669656C644F665669657701043O001211000100013O002022000100010002001003000100034O000A3O00017O00",v9(),...);
